version: 2.1

orbs:
  python: circleci/python@0.2.1

commands:

  run-with-coverage:
    parameters:
      command:
        type: string
    steps:
      - run:
          name: "Run Tests"
          command: |
            python --version
            mkdir -p coverage_output
            export COVERAGE_FILE=coverage_output/.coverage.$CIRCLE_BUILD_NUM
            << parameters.command >>
      - persist_to_workspace:
          root: coverage_output
          paths:
            - .coverage.*
  
jobs:
  build-and-test:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
          name: before_script
      - run:
          command: python -m unittest discover
          name: Test
      - run:
          command: |
            python --version
            ls -l
            mkdir -p coverage_output
            export COVERAGE_FILE=coverage_output/.coverage.$CIRCLE_BUILD_NUM
            sudo pip install coverage
            coverage run --source ./cli_tool/ -m unittest discover
          name: Coverage
      - run:
          command: |
            coverage xml
            ls -la
            ./cc-test-reporter after-build --exit-code $?
      - persist_to_workspace:
          root: coverage_output
          paths:
            - .coverage.*
          
  coverage:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: coverage_output
      - run:
          name: "Check coverage"
          command: |
            sudo pip install coverage
            coverage combine coverage_output/
            coverage report --show-missing --fail-under=100

workflows:
  main:
    jobs:
      - build-and-test
